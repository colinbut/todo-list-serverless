AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-list-serverless

  SAM Template for todo-list-serverless

Globals:
  Function:
    Timeout: 3

Resources:
  DynamoDBDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "item_id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "item_id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: Todos
  
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: TodoListApi
      Description: The API Gateway for the Todo List Application
      StageName: Prod
      TracingEnabled: true
      # MethodSettings:
      #   - DataTraceEnabled: true
      #     MetricsEnabled: true

  WebsiteCheckerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: website_checker/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Events:
        WebsiteChecker:
          Type: Api
          Properties:
            Path: /checker
            Method: get
            RestApiId: !Ref ApiGateway

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBPutParameterPolicy
          Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource: '*'
      Events:
        CreateTodo:
          Type: Api
          Properties:
            Path: /todo-list/create
            Method: post
            RestApiId: !Ref ApiGateway

  ListTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: list_todos/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBScanTablePolicy
          Effect: Allow
          Action:
          - dynamodb:Scan
          Resource: '*'
      Events:
        ListTodo:
          Type: Api
          Properties:
            Path: /todo-list/list
            Method: get
            RestApiId: !Ref ApiGateway
  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBUpdateItemPolicy
          Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource: '*'
      Events:
        ListTodo:
          Type: Api
          Properties:
            Path: /todo-list/update
            Method: put
            RestApiId: !Ref ApiGateway

Outputs:
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WebsiteCheckerApi:
    Description: "API Gateway endpoint URL for Prod stage for Website Checker function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/checker/"
  WebsiteCheckerFunction:
    Description: "Website Checker Function ARN"
    Value: !GetAtt WebsiteCheckerFunction.Arn