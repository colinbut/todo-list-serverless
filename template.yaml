AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  todo-list-serverless

  SAM Template for todo-list-serverless

Globals:
  Function:
    Timeout: 3

Resources:

  DeleteQueue:
    Type: AWS::SQS::Queue
    Properties:
      QueueName: "delete-todo-queue"

  QueueParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: "/todolist/deletequeue/url"
      Type: String
      Value: !Ref DeleteQueue
      Description: SSM Parameter for the url of the todo list delete queue
      Tags:
        Environment: Dev

  AlarmTopic:
    Type: AWS::SNS::Topic
    Properties:
      DisplayName: "delete-queue-alarm-notification"
      TopicName: delete-queue-alarm-topic
      Subscription:
        - Protocol: "lambda"
          Endpoint: !GetAtt DeleteTodoFunction.Arn

  QueueDepthAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmDescription: "Alarm if queue depth increases to more than 10 messages"
      Namespace: "AWS/SQS"
      MetricName: "ApproximateNumberOfMessagesVisible"
      Dimensions:
        - 
          Name: "QueueName"
          Value: 
            !GetAtt
              - "DeleteQueue"
              - "QueueName"
      Statistic: "Sum"
      Period: "300" # 5 mins
      EvaluationPeriods: "1"
      Threshold: "1"
      ComparisonOperator: "GreaterThanOrEqualToThreshold"
      AlarmActions:
        - Ref: "AlarmTopic"
      InsufficientDataActions:
        - Ref: "AlarmTopic"


  DynamoDBDatabase:
    Type: AWS::DynamoDB::Table
    Properties:
      AttributeDefinitions:
        -
          AttributeName: "item_id"
          AttributeType: "S"
      KeySchema:
        -
          AttributeName: "item_id"
          KeyType: "HASH"
      BillingMode: PAY_PER_REQUEST
      TableName: Todos
  
  ApiGateway:
    Type: AWS::Serverless::Api
    Properties:
      Name: TodoListApi
      Description: The API Gateway for the Todo List Application
      StageName: Prod
      TracingEnabled: true
      MethodSettings:
        - DataTraceEnabled: true
          MetricsEnabled: true
          #LoggingLevel: "INFO"
          HttpMethod: "*"
          ResourcePath: "/*"

  WebsiteCheckerFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: website_checker/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Events:
        WebsiteChecker:
          Type: Api
          Properties:
            Path: /checker
            Method: get
            RestApiId: !Ref ApiGateway

  CreateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: create_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBPutParameterPolicy
          Effect: Allow
          Action:
          - dynamodb:PutItem
          Resource: '*'
      Events:
        CreateTodo:
          Type: Api
          Properties:
            Path: /todo-list/create
            Method: post
            RestApiId: !Ref ApiGateway

  ListTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: list_todos/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBScanTablePolicy
          Effect: Allow
          Action:
          - dynamodb:Scan
          Resource: '*'
      Events:
        ListTodo:
          Type: Api
          Properties:
            Path: /todo-list/list
            Method: get
            RestApiId: !Ref ApiGateway
  UpdateTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: update_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBUpdateItemPolicy
          Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource: '*'
      Events:
        UpdateTodo:
          Type: Api
          Properties:
            Path: /todo-list/update
            Method: put
            RestApiId: !Ref ApiGateway
  
  CompleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: complete_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: DynamoDBUpdateItemPolicy
          Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource: '*'
      Events:
        CompleteTodo:
          Type: Api
          Properties:
            Path: /todo-list/complete/{item_id}
            Method: post
            RestApiId: !Ref ApiGateway       
  MarkDeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: mark_delete_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: SSMGetParameterPolicy
          Effect: Allow
          Action:
          - ssm:GetParameter
          Resource: '*'
      - Statement:
        - Sid: SQSSendMessagePolicy
          Effect: Allow
          Action:
          - sqs:SendMessage
          Resource: '*'
      Events:
        MarkTodoDelete:
          Type: Api
          Properties:
            Path: /todo-list/markdelete/{item_id}
            Method: delete
            RestApiId: !Ref ApiGateway
  
  DeleteTodoFunction:
    Type: AWS::Serverless::Function
    Properties:
      CodeUri: delete_todo/
      Handler: app.lambda_handler
      Runtime: python3.8
      Tracing: Active
      Policies:
      - Statement:
        - Sid: SSMGetParameterPolicy
          Effect: Allow
          Action:
          - ssm:GetParameter
          Resource: '*'
      - Statement:
        - Sid: SQSSendMessagePolicy
          Effect: Allow
          Action:
          - sqs:ReceiveMessage
          Resource: '*'
      - Statement:
        - Sid: DynamoDBUpdateItemPolicy
          Effect: Allow
          Action:
          - dynamodb:UpdateItem
          Resource: '*'

Outputs:
  # https://github.com/awslabs/serverless-application-model/blob/master/docs/internals/generated_resources.rst#api
  WebsiteCheckerApi:
    Description: "API Gateway endpoint URL for Prod stage for Website Checker function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/checker/"
  CreateTodoApi:
    Description: "API Gateway endpoint URL for Prod stage for Create Todo function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo-list/create"
  ListTodosApi:
    Description: "API Gateway endpoint URL for Prod stage for List Todos function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo-list/list"
  UpdateTodoApi:
    Description: "API Gateway endpoint URL for Prod stage for Update Todo function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo-list/update"
  CompleteTodoApi:
    Description: "API Gateway endpoint URL for Prod stage for Complete Todo function"
    Value: !Sub "https://${ApiGateway}.execute-api.${AWS::Region}.amazonaws.com/Prod/todo-list/complete/{item_id}"
  WebsiteCheckerFunction:
    Description: "Website Checker Function ARN"
    Value: !GetAtt WebsiteCheckerFunction.Arn
  DeleteQueueURL:
    Description: "The queue url of the delete queue"
    Value: !Ref DeleteQueue